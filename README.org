#+TITLE: GloUI (gloui)

A User Interface for Glow dapps on Blockchain Networks.

* Installation

First, [[https://gitlab.com/mukn/glow/-/blob/master/INSTALL.md#installing-glow][Install Glow]]. You currently also need a working [[https://cons.io/][Gerbil]] scheme
installation.

Then install the gerbil package.

#+begin_src shell
gxpkg install github.com/drewc/gloui
#+end_src

Now run the server.

#+begin_src shell
gxi -e "(import :gloui/gloui)" -e '(start-server!)' -e '(display "started GloUI Server\n")' -
#+end_src

With the server running, head over to http://localhost:6741 wait 30 seconds or
so for it to load. Done!

* Development
**  Install the dependencies
#+begin_src shell
yarn
#+end_src
** Start the app in development mode (hot-code reloading, error reporting, etc.)
#+begin_src shell
quasar dev
#+end_src

** Build the app for production
#+begin_src shell
quasar build
#+end_src

** Customize the configuration

See [[Configuring quasar.conf.js]].

** Tangle : Extracting Source

   So, to tangle code in emacs, ~org-babel-tangle-file~ is the function, and the
   interactive ~org-babel-tangle (C-c C-v C-t)~ is of good use if you happen to
   use emacs as your editor.

 #+begin_src scheme :tangle "tangle.ss" :shebang "#!/usr/bin/env gxi"
(import :std/misc/process)
  ;; # Change to where this file lives
  ;;  cd "$(dirname "$0")"

(def srcdir (path-normalize (path-directory (this-source-file))))

(def source-of-source
  '("README.org"
    "doc/log/0000-Getting-Started.org"
    "doc/log/0001-Static-File-Server.org"
    "doc/ftw.org"))

;; # Use Emacs to tangle the files.
;;    tangle() {
;;        emacs --batch -l org --eval "(org-babel-tangle-file \"$1\")"
;;    }

(def (tangle srcdir file)
  (display
   (run-process ["emacs" "--batch" "-l" "org" "--eval"
                 (string-append" (print (org-babel-tangle-file \""file"\"))")]
                directory: srcdir)))

;; # Tangle the files!

(for-each (cut tangle srcdir <>) source-of-source)
 #+end_src
